name: Test & Build multi-arch Docker Image

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - run: go version

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: go-mod verify
        run: go mod verify

      - name: go-mod tidy
        run: go mod tidy

      - name: go-build
        env:
          GOOS: linux
        run: go build

      - name: go-test
        run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18'
    - run: go version

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker info
      run: docker info
    - name: Buildx inspect
      run: docker buildx inspect

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: testcontainers/ryuk

    - name: Build image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
        push: false
        tags: ${{ steps.meta.outputs.tags }}

    - name: Analyze for critical and high CVEs
      id: docker-scout-cves
      uses: docker/scout-action@v0.19.0
      with:
        command: cves
        image: ${{ steps.meta.outputs.tags }}
        sarif-file: sarif.output.json
        summary: true

    - name: Upload SARIF result
      id: upload-sarif
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: sarif.output.json

    - name: Compare to deployed image
      id: docker-scout-compare
      if: ${{ github.event_name == 'pull_request' }}
      uses: docker/scout-action@v0.19.0
      with:
        command: compare
        image: ${{ steps.meta.outputs.tags }}
        only-severities: critical,high
        to-stream: prod
        exit-code: true
        summary: true